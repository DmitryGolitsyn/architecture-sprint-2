name: mongo-sharding

services:

  configsrv1:
    container_name: configsrv1
    image: mongo:latest
    volumes:
      - configsrv1_data:/data/db
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.2
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s


  shard1:
    container_name: shard1
    image: mongo:latest
    volumes:
      - shard1_data:/data/db
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.4
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2:
    container_name: shard2
    image: mongo:latest
    volumes:
      - shard2_data:/data/db
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos1:
    container_name: mongos1
    image: mongo:latest
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configsrv1:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos1
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    environment:
      MONGODB_URL: "mongodb://mongos1:27020"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/24

volumes:
  configsrv1_data:
  shard1_data:
  shard2_data: