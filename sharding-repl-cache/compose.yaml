name: sharding-repl-cache

services:

  configsrv1:
    container_name: configsrv1
    image: mongo:latest
    volumes:
      - configsrv1_data:/data/db
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.2
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s


  shard1-1:
    container_name: shard1-1
    image: mongo:latest
    volumes:
      - shard1_data:/data/db
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.4
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1-1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-2:
    image: mongo:latest
    container_name: shard1-2
    command: --shardsvr --replSet shard1-1 --port 27028
    ports:
      - 27028:27028
    networks:
      app-network:
        ipv4_address: 173.17.0.11

  shard1-3:
    image: mongo:latest
    container_name: shard1-3
    command: --shardsvr --replSet shard1-1 --port 27038
    ports:
      - 27038:27038
    networks:
      app-network:
        ipv4_address: 173.17.0.12


  shard2-1:
    container_name: shard2-1
    image: mongo:latest
    volumes:
      - shard2_data:/data/db
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2-1",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-2:
    image: mongo:latest
    container_name: shard2-2
    command: --shardsvr --replSet shard2-1 --port 27029
    ports:
      - 27029:27029
    networks:
      app-network:
        ipv4_address: 173.17.0.13

  shard2-3:
    image: mongo:latest
    container_name: shard2-3
    command: --shardsvr --replSet shard2-1 --port 27039
    ports:
      - 27039:27039
    networks:
      app-network:
        ipv4_address: 173.17.0.14

  mongos1:
    container_name: mongos1
    image: mongo:latest
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configsrv1:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
        ipv4_address: 173.17.0.20

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos1
      - shard1-1
      - shard2-1
      - configsrv1
      - redis
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    environment:
      MONGODB_URL: "mongodb://mongos1:27020"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://173.17.0.20:6379"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/24

volumes:
  configsrv1_data:
  shard1_data:
  shard2_data: